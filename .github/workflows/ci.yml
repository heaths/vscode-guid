name: ci

on:
  pull_request:
  push:
    branches:
    - main
  workflow_call:
    inputs:
      release:
        description: Whether this is running as part of a release workflow.
        required: false
        type: boolean
        default: false

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node-version:
        - '16.x'
        os:
        - macos-latest
        - ubuntu-latest
        - windows-latest
        vscode-channel:
        - stable
        - insiders

    outputs:
      package_name: ${{ steps.package.outputs.package_name }}
      build_version: ${{ steps.package.outputs.build_version }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        cache: npm
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm ci

    - name: Compile
      run: npm run compile

    - name: Test (Linux)
      if: runner.os == 'Linux'
      run: xvfb-run -a npm test
      env:
        CODE_VERSION: ${{ matrix.vscode-channel }}
        TEST_RESULTS_PATH: ${{ github.workspace }}/.vscode-test/test-results.xml

    - name: Test
      if: runner.os != 'Linux'
      run: npm test
      env:
        CODE_VERSION: ${{ matrix.vscode-channel }}
        TEST_RESULTS_PATH: ${{ github.workspace }}/.vscode-test/test-results.xml

    - name: Publish test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.vscode-channel }}
        path: .vscode-test/test-results.xml

    - id: package
      name: Package
      run: |
        npm install -g vsce
        vsce package -o "${{ runner.temp }}/vscode-guid-${{ env.BUILD_VERSION }}.vsix"

        echo "::set-output name=package_name::vscode-guid-${{ env.BUILD_VERSION }}.vsix"
        echo "::set-output name=build_version::${{ env.BUILD_VERSION }}"
      if: runner.os == 'Linux' && matrix.vscode-channel == 'stable'

    - name: Upload package
      uses: actions/upload-artifact@v3
      if: runner.os == 'Linux' && matrix.vscode-channel == 'stable'
      with:
        name: artifacts
        path: ${{ runner.temp }}/vscode-guid-${{ env.BUILD_VERSION }}.vsix

  check:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}

    steps:
    - name: Check
      run: |
        if [[ "${{ needs.test.result }}" == "success" ]]; then
          echo -e "\e[32mSuccess\e[0m"
        else
          echo -e "\e[31mFailed\e[0m"
          exit 1
        fi
